import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';
import styles from '../styles/Home.module.css'
import { useEffect, useState } from "react";
import "@rainbow-me/rainbowkit/styles.css";
import { ethers } from "ethers";
import {
  getDefaultWallets,
  RainbowKitProvider,
  ConnectButton,
} from "@rainbow-me/rainbowkit";

import { chain, configureChains, createClient, WagmiConfig } from "wagmi";
import { alchemyProvider } from "wagmi/providers/alchemy";
import { publicProvider } from "wagmi/providers/public";

import QuestsPage from './../components/QuestsPage';
import LeaderBoard from './../components/LeaderBoard';
import Footer from './../components/Footer';



/*import contract from "./contracts/NumberBox.json";

const contractAddress = "0xFDA9C8A3d94A9786d9639Dca33b92604802ba6e0";
const abi = contract.abi;*/


export default function Home() {
  const { chains, provider } = configureChains(
    [chain.mainnet, chain.polygonMumbai, chain.optimism, chain.arbitrum],
    [
      alchemyProvider({ alchemyId: process.env.REACT_APP_ALCHEMY_ID }),
      publicProvider(),
    ]
  );

  const { connectors } = getDefaultWallets({
    appName: "My RainbowKit App",
    chains,
  });

  const wagmiClient = createClient({
    autoConnect: true,
    connectors,
    provider,
  });

  
  useEffect(() => {
  
    // Update the document title using the browser API
    console.log(window.ethereum)
  }, []);



  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <WagmiConfig client={wagmiClient}>
      <RainbowKitProvider chains={chains}>
        <div>
          <Link href="/invoices">Invoices</Link> |
          <Link href="/expenses">Expenses</Link>
          <ConnectButton />
        
        </div>
        <QuestsPage />
        <LeaderBoard />
        <Footer />

      </RainbowKitProvider>
    </WagmiConfig>
        
    </div>
  )
}
